{"ast":null,"code":"var _jsxFileName = \"/workspaces/interactive-data-analysis-platform/frontend/src/components/Visualization.js\",\n  _s = $RefreshSig$();\n// /frontend/components/Visualization.js\nimport React, { useState, useEffect } from 'react';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualization = ({\n  query\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchVisualizationData = async () => {\n      if (!query) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get('/api/visualization', {\n          params: {\n            query\n          }\n        });\n        setChartData(response.data);\n      } catch (err) {\n        console.error('Error fetching visualization data:', err);\n        setError('Failed to load visualization data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchVisualizationData();\n  }, [query]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading visualization...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  if (!chartData) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualization\",\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: chartData.data,\n      layout: chartData.layout,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualization, \"08+ox8fpFyuib5nLLf+u27Gco1s=\");\n_c = Visualization;\nexport default Visualization;\nvar _c;\n$RefreshReg$(_c, \"Visualization\");","map":{"version":3,"names":["React","useState","useEffect","Plot","axios","jsxDEV","_jsxDEV","Visualization","query","_s","chartData","setChartData","loading","setLoading","error","setError","fetchVisualizationData","response","get","params","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","layout","style","width","height","_c","$RefreshReg$"],"sources":["/workspaces/interactive-data-analysis-platform/frontend/src/components/Visualization.js"],"sourcesContent":["// /frontend/components/Visualization.js\nimport React, { useState, useEffect } from 'react';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\n\nconst Visualization = ({ query }) => {\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchVisualizationData = async () => {\n      if (!query) return;\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response = await axios.get('/api/visualization', {\n          params: { query },\n        });\n        setChartData(response.data);\n      } catch (err) {\n        console.error('Error fetching visualization data:', err);\n        setError('Failed to load visualization data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchVisualizationData();\n  }, [query]);\n\n  if (loading) return <div>Loading visualization...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData) return null;\n\n  return (\n    <div className=\"visualization\">\n      <Plot\n        data={chartData.data}\n        layout={chartData.layout}\n        style={{ width: '100%', height: '100%' }}\n      />\n    </div>\n  );\n};\n\nexport default Visualization;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMc,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI,CAACR,KAAK,EAAE;MAEZK,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oBAAoB,EAAE;UACrDC,MAAM,EAAE;YAAEX;UAAM;QAClB,CAAC,CAAC;QACFG,YAAY,CAACM,QAAQ,CAACG,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACR,KAAK,CAAC,oCAAoC,EAAEO,GAAG,CAAC;QACxDN,QAAQ,CAAC,mCAAmC,CAAC;MAC/C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAAiB,QAAA,EAAK;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACvD,IAAIb,KAAK,EAAE,oBAAOR,OAAA;IAAAiB,QAAA,GAAK,SAAO,EAACT,KAAK;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC3C,IAAI,CAACjB,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAL,QAAA,eAC5BjB,OAAA,CAACH,IAAI;MACHiB,IAAI,EAAEV,SAAS,CAACU,IAAK;MACrBS,MAAM,EAAEnB,SAAS,CAACmB,MAAO;MACzBC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}